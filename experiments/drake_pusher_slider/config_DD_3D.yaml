env:
  type: "DrakePusherSlider"
  model_name: "sugar_box"
  table:
    size: [0.8, 0.8, 0.1]
    color: [0.5, 0.5, 0.5, 1.] # RGBA
    coulomb_friction: [0.9, 0.8] # static, dynamic friction
  mbp_dt: 0.001 # dt for multibody plant
  step_dt: 0.1 # 10Hz
  target_realtime_rate: 1.0
  rgbd_sensors:
    enabled: False
  observation:
    rgbd: False # whether to store image observations or not
dataset:
  num_episodes: 500 # only used during data generation
  num_episodes_per_file: 10 # only used during data generation
  max_num_episodes: -1 # optional max num episodes when loading dataset, used for trimming datset
  num_timesteps: 30 # only used during data generation
  state_dim: 18 # pusher position-3D (3) + 5 descriptor keypoints (3D)
  action_dim: 2 # pusher velocity-2D
  data_generation:
    exploration_type: "random"
  data_augmentation:
    enabled: True
    type: "homogeneous_transform"
    pos_min: [-0.4,-0.4,0]
    pos_max: [0.4, 0.4, 0]
    yaw_min: -3.2
    yaw_max: 3.2
  action_function:
    type: "drake_pusher_velocity"
  observation_function:
    type: "drake_pusher_position_3D"
  visual_observation_function:
    type: "precomputed_descriptor_keypoints_3D"
    camera_name: "camera_1_top_down"
  visual_observation:
    enabled: False
  object_state_shape: [5,3]
  robot_state_shape: [1,3]

dynamics_net:
  model_type: "mlp"

train:
  random_seed: 1
  n_epoch: 1200
  lr: 1e-4
  adam_beta1: 0.9
  batch_size: 128
  batch_norm: False
  nf_hidden: 500
  num_workers: 20
  train_valid_ratio: 0.5
  valid_frequency: 5 # validate after this many training epochs
  log_per_iter: 50
  ckp_per_iter: 10000
  resume_epoch: -1
  resume_iter: -1
  n_history: 1
  n_rollout: 10
#  lr_scheduler:
#    type: "ReduceLROnPlateau"
#    patience: 10 # epochs
#    factor: 0.1 # reduce LR by this factor
#    threshold: 1e-4
#    threshold_mode: "rel" # can be ["rel", "abs"]
#    cooldown: 5
#    min_lr: 1e-8
  lr_scheduler:
    type: "StepLR"
    enabled: True
    step_size: 700 # epochs
    gamma: 0.1 # reduce LR by this factor

  valid_loss_type: 'l2_final_step'


eval:
  eval_set: 'valid'
  visualization: True
  num_episodes: 10
  start_idx: 0 # start_idx past n_history
  episode_length: [10, 15] # 10 timesteps
  T_aug:
    pos_min: [-0.1, -0.1, 0]
    pos_max: [0.1, 0.1, 0]
    yaw_min: 0
    yaw_max: 6.28
  replan:
    True


mpc:
  mpc_dy_epoch: -1
  mpc_dy_iter: -1
  num_episodes: 10
  num_timesteps: 35
  optim_type: mppi      # mppi/cem/gd
  n_sample: 1000
  n_look_ahead: 10
  n_update_iter_init: 30   # optimization steps for the first update ~ planning
  n_update_iter: 30         # optimization steps for the subsequent updates
  action_lower_lim: [-0.2, -0.2] # these are estimated from `sample_pusher_velocity_func()`
  action_upper_lim: [0.2, 0.2]
  add_noise_to_observation: False # whether to add noise to observation during MPC rollouts
  terminal_cost_only: True
  cost_norm: 2

  mppi: # model predictive path integral
    beta_filter: 0.7 # probably can leave this at default value of 0.7
#    reward_weight: 0.01 # probably much too small for DrakePusherSlider after rescaling to fraction of image
#    reward_weight: 1.4 # e = 0.375% error is 3 pixels at 640 x 480. Then gamma*e**2 = 0.2
    reward_weight: 200.0 # we are in meters (3D space)
    noise:
      type: "normal"
      sigma: 0.2

  random_shooting:
    angle_min_deg: 0
    angle_max_deg: 360
    angle_step_deg: 1
    vel_min: 0.15
    vel_max: 0.25
    vel_step: 0.01

  cem:  # cross entropy method

  gd:   # gradient descent

loss_function:
  mse_final_step:
    enabled: False
    weight: 1.0

  mse:
    enabled: True
    weight: 1.0

  smooth_l1:
    enabled: False
    weight: 1.0

  smooth_l1_final_step:
    enabled: False
    weight: 1.0

  weight_matrix_sparsity:
    enabled: False
    weight: 0.0001
